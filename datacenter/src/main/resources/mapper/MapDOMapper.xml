<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.renfei.datacenter.database.persistences.MapDOMapper">
    <resultMap id="BaseResultMap" type="net.renfei.datacenter.database.entity.MapDO">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="longitude" jdbcType="DECIMAL" property="longitude"/>
        <result column="latitude" jdbcType="DECIMAL" property="latitude"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id
        ,
        longitude,
        latitude
    </sql>
    <select id="selectByExample" parameterType="net.renfei.datacenter.database.entity.MapDOExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from t_map
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_map
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete
        from t_map
        where id = #{id,jdbcType=VARCHAR}
    </delete>
    <delete id="deleteByExample" parameterType="net.renfei.datacenter.database.entity.MapDOExample">
        delete from t_map
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="net.renfei.datacenter.database.entity.MapDO">
        insert into t_map (id, longitude, latitude)
        values (#{id,jdbcType=VARCHAR}, #{longitude,jdbcType=DECIMAL}, #{latitude,jdbcType=DECIMAL})
    </insert>
    <insert id="insertSelective" parameterType="net.renfei.datacenter.database.entity.MapDO">
        insert into t_map
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="longitude != null">
                longitude,
            </if>
            <if test="latitude != null">
                latitude,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="longitude != null">
                #{longitude,jdbcType=DECIMAL},
            </if>
            <if test="latitude != null">
                #{latitude,jdbcType=DECIMAL},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="net.renfei.datacenter.database.entity.MapDOExample"
            resultType="java.lang.Long">
        select count(*) from t_map
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update t_map
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=VARCHAR},
            </if>
            <if test="record.longitude != null">
                longitude = #{record.longitude,jdbcType=DECIMAL},
            </if>
            <if test="record.latitude != null">
                latitude = #{record.latitude,jdbcType=DECIMAL},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update t_map
        set id = #{record.id,jdbcType=VARCHAR},
        longitude = #{record.longitude,jdbcType=DECIMAL},
        latitude = #{record.latitude,jdbcType=DECIMAL}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="net.renfei.datacenter.database.entity.MapDO">
        update t_map
        <set>
            <if test="longitude != null">
                longitude = #{longitude,jdbcType=DECIMAL},
            </if>
            <if test="latitude != null">
                latitude = #{latitude,jdbcType=DECIMAL},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="net.renfei.datacenter.database.entity.MapDO">
        update t_map
        set longitude = #{longitude,jdbcType=DECIMAL},
            latitude  = #{latitude,jdbcType=DECIMAL}
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <select id="selectMapsByDistance" resultType="net.renfei.datacenter.database.entity.MapDOEx">
        select
        <include refid="Base_Column_List"/>
        ,
        round(
        6378.138 * 2 * asin(
        sqrt(
        pow( sin( ( latitude * pi()/ 180-#{latitude,jdbcType=DECIMAL} * pi()/ 180 )/ 2 ), 2 )+ cos( latitude * pi()/ 180
        )* cos( #{latitude,jdbcType=DECIMAL} * pi()/ 180 )* pow( sin( ( longitude * pi()/
        180-#{longitude,jdbcType=DECIMAL} * pi()/ 180 )/ 2 ), 2 )))* 1000
        ) AS distance
        from t_map
        HAVING
        distance <![CDATA[<]]> #{distance,jdbcType=INTEGER}
        ORDER BY distance DESC
    </select>
</mapper>